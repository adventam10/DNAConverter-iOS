//
//  DNAConverterTests.swift
//  DNAConverterTests
//
//  Created by am10 on 2023/06/17.
//  Copyright ¬© 2023 am10. All rights reserved.
//

import XCTest
@testable import DNAConverter

final class DNAConverterTests: XCTestCase {

    override func setUp() {
        // Put setup code here. This method is called before the invocation of each test method in the class.
    }

    func testIsEmptyTextWithText() {
        let model = DNAConverter()
        XCTAssertTrue(model.isEmptyText(""))
        XCTAssertTrue(model.isEmptyText(nil))
        XCTAssertFalse(model.isEmptyText("„ÅÇ„ÅÑ„ÅÜ„Åà„Åä"))
        XCTAssertFalse(model.isEmptyText("ÊÑõÈ£¢„ÅàÁî∑"))
        XCTAssertFalse(model.isEmptyText("12345"))
        XCTAssertFalse(model.isEmptyText("ABCDE"))
        XCTAssertFalse(model.isEmptyText(" "))
        XCTAssertFalse(model.isEmptyText("„ÄÄ"))
    }

    func testIsInvalidDNAWithText() {
        let model = DNAConverter()
        XCTAssertTrue(model.isInvalidDNA(""))
        XCTAssertTrue(model.isInvalidDNA(nil))
        XCTAssertTrue(model.isInvalidDNA("„ÅÇ„ÅÑ„ÅÜ„Åà"))
        XCTAssertTrue(model.isInvalidDNA("ÊÑõÈ£¢Áî∑"))
        XCTAssertTrue(model.isInvalidDNA("1234"))
        XCTAssertTrue(model.isInvalidDNA("ABCD"))
        XCTAssertTrue(model.isInvalidDNA("  "))
        XCTAssertTrue(model.isInvalidDNA("„ÄÄ„ÄÄ"))
        XCTAssertTrue(model.isInvalidDNA("AATTCCG"))
        XCTAssertFalse(model.isInvalidDNA("AATTCCGG"))
    }

    func testConvertToDNAWithText() {
        let model = DNAConverter()
        XCTAssertEqual(model.convertToDNA(""), .failure(.empty))
        XCTAssertEqual(model.convertToDNA(nil), .failure(.empty))
        XCTAssertEqual(model.convertToDNA("„ÅÇ„ÅÑ„ÅÜ„Åà"), .success("GCAGCAATCAACGCAGCAATCATAGCAGCAATCATCGCAGCAATCACA"))
        XCTAssertEqual(model.convertToDNA("ÊÑõÈ£¢Áî∑"), .success("GCTCCATACTCGGCCTCCAGCCACGCTGCTTACGTG"))
        XCTAssertEqual(model.convertToDNA("1234"), .success("AGATAGACAGAGAGTA"))
        XCTAssertEqual(model.convertToDNA("ABCD"), .success("TAATTAACTAAGTATA"))
        XCTAssertEqual(model.convertToDNA(" "), .success("ACAA"))
        XCTAssertEqual(model.convertToDNA("„ÄÄ"), .success("GCAGCAAACAAA"))
        XCTAssertEqual(model.convertToDNA("!\"#$%&'()-^@[;:],./\\=~|`{+*}<>?_"), .success("ACATACACACAGACTAACTTACTCACTGACCAACCTACGTTTGCTAAATTCGAGCGAGCCTTGTACGAACGCACGGTTGAAGGTTGGCTGGATCAATGCGACCGACCCTGGTAGGAAGGCAGGGTTGG"))
        XCTAssertEqual(model.convertToDNA("„ÄÅ„ÄÇÔºåÔºé„ÉªÔºöÔºõÔºüÔºÅ„Çõ„Çú¬¥ÔΩÄ¬®ÔºæÔø£Ôºø„ÉΩ„Éæ„Çù„Çû„ÄÉ‰ªù„ÄÖ„ÄÜ„Äá„Éº‚Äï‚ÄêÔºèÔººÔΩû‚à•ÔΩú‚Ä¶‚Ä•"), .success("GCAGCAAACAATGCAGCAAACAACGCGGCGGACAGAGCGGCGGACAGCGCAGCAAGCGCGGCGGCGGACTCCGCGGCGGACTCGGCGGCGGACTGGGCGGCGGACAATGCAGCAACCTCGGCAGCAACCTGAGAACCGTAGCGGCGGTCAAAGAACCCCAGCGGCGGACGGCGCGGCGGGCCAGGCGGCGGACGGGGCAGCAAGCGGTGCAGCAAGCGGCGCAGCAACCTGTGCAGCAACCTGCGCAGCAAACAAGGCTACGCGCTGTGCAGCAAACATTGCAGCAAACATCGCAGCAAACATGGCAGCAAGCGGAGCACCAAACTTTGCACCAAACTAAGCGGCGGACAGGGCGGCGGACGGAGCGGCGGTCTGCGCACCACACCTTGCGGCGGTCTGAGCACCAAACCTCGCACCAAACCTT"))
        XCTAssertEqual(model.convertToDNA("‚Äò‚Äô‚Äú‚ÄùÔºàÔºâ„Äî„ÄïÔºªÔºΩÔΩõÔΩù„Äà„Äâ„Ää„Äã„Äå„Äç„Äé„Äè„Äê„ÄëÔºãÔºç¬±√ó√∑Ôºù‚â†ÔºúÔºû‚â¶‚âß‚àû‚à¥"), .success("GCACCAAACTCAGCACCAAACTCTGCACCAAACTGAGCACCAAACTGTGCGGCGGACACAGCGGCGGACACTGCAGCAAACTTAGCAGCAAACTTTGCGGCGGACGCGGCGGCGGACGGTGCGGCGGTCTCGGCGGCGGTCTGTGCAGCAAACACAGCAGCAAACACTGCAGCAAACACCGCAGCAAACACGGCAGCAAACAGAGCAGCAAACAGTGCAGCAAACAGCGCAGCAAACAGGGCAGCAAACTAAGCAGCAAACTATGCGGCGGACACGGCGGCGGACAGTGAACCGATGAAGCTTGGAAGCGTGGCGGCGGACTGTGCACCACTCCAAGCGGCGGACTGAGCGGCGGACTGCGCACCACTCCTCGCACCACTCCTGGCACCACACTGCGCACCACACGTA"))
        XCTAssertEqual(model.convertToDNA("‚ôÇ‚ôÄ¬∞‚Ä≤‚Ä≥‚ÑÉÔø•ÔºÑÔø†Ôø°ÔºÖÔºÉÔºÜÔºäÔº†¬ß‚òÜ‚òÖ‚óã‚óè‚óé‚óá‚óÜ‚ñ°‚ñ†‚ñ≥‚ñ≤‚ñΩ‚ñº‚Äª„Äí‚Üí‚Üê‚Üë‚Üì„Äì"), .success("GCACCTCTCAACGCACCTCTCAAAGAACCGAAGCACCAAACGACGCACCAAACGAGGCACCATACAAGGCGGCGGGCCTTGCGGCGGACATAGCGGCGGGCCAAGCGGCGGGCCATGCGGCGGACATTGCGGCGGACAAGGCGGCGGACATCGCGGCGGACACCGCGGCGGACCAAGAACCCTGGCACCTCACATCGCACCTCACATTGCACCTTGCACGGCACCTTGCAGGGCACCTTGCAGCGCACCTTGCATGGCACCTTGCATCGCACCTTCCCATGCACCTTCCCAAGCACCTTCCGAGGCACCTTCCGACGCACCTTCCGGTGCACCTTCCGGAGCACCAAACGCGGCAGCAAACTACGCACCATCCTACGCACCATCCTAAGCACCATCCTATGCACCATCCTAGGCAGCAAACTAG"))
        XCTAssertEqual(model.convertToDNA("‚àà‚àã‚äÜ‚äá‚äÇ‚äÉ‚à™‚à©‚àß‚à®Ôø¢‚áí‚áî‚àÄ‚àÉ‚à†‚ä•‚åí‚àÇ‚àá‚â°‚âí‚â™‚â´‚àö‚àΩ‚àù‚àµ‚à´‚à¨‚Ñ´‚Ä∞‚ôØ‚ô≠‚ô™"), .success("GCACCACACACAGCACCACACACGGCACCACCCATCGCACCACCCATGGCACCACCCAACGCACCACCCAAGGCACCACACCCCGCACCACACCCTGCACCACACCTGGCACCACACCCAGCGGCGGGCCACGCACCATGCTACGCACCATGCTTAGCACCACACAAAGCACCACACAAGGCACCACACCAAGCACCACCCCTTGCACCAGACTACGCACCACACAACGCACCACACATGGCACCACTCCATGCACCACTCTACGCACCACTCCCCGCACCACTCCCGGCACCACACTCCGCACCACACGGTGCACCACACTGTGCACCACACGTTGCACCACACCCGGCACCACACCGAGCACCATACCCGGCACCAAACGAAGCACCTCTCCGGGCACCTCTCCGTGCACCTCTCCCC"))
        XCTAssertEqual(model.convertToDNA("ŒëŒíŒìŒîŒïŒñŒóŒòŒôŒöŒõŒúŒùŒûŒüŒ†Œ°Œ£Œ§Œ•Œ¶ŒßŒ®Œ©Œ±Œ≤Œ≥Œ¥ŒµŒ∂Œ∑Œ∏"), .success("GAGCCTATGAGCCTACGAGCCTAGGAGCCTTAGAGCCTTTGAGCCTTCGAGCCTTGGAGCCTCAGAGCCTCTGAGCCTCCGAGCCTCGGAGCCTGAGAGCCTGTGAGCCTGCGAGCCTGGGAGCCCAAGAGCCCATGAGCCCAGGAGCCCTAGAGCCCTTGAGCCCTCGAGCCCTGGAGCCCCAGAGCCCCTGAGCCGATGAGCCGACGAGCCGAGGAGCCGTAGAGCCGTTGAGCCGTCGAGCCGTGGAGCCGCA"))
        XCTAssertEqual(model.convertToDNA("ŒπŒ∫ŒªŒºŒΩŒæŒøœÄœÅœÉœÑœÖœÜœáœàœâ–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û"), .success("GAGCCGCTGAGCCGCCGAGCCGCGGAGCCGGAGAGCCGGTGAGCCGGCGAGCCGGGGAGGCAAAGAGGCAATGAGGCAAGGAGGCATAGAGGCATTGAGGCATCGAGGCATGGAGGCACAGAGGCACTGTAACTAAGTAACTATGTAACTACGTAACTAGGTAACTTAGTAACTTTGTAACAATGTAACTTCGTAACTTGGTAACTCAGTAACTCTGTAACTCCGTAACTCGGTAACTGAGTAACTGTGTAACTGC"))
        XCTAssertEqual(model.convertToDNA("–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω"), .success("GTAACTGGGTAACCAAGTAACCATGTAACCACGTAACCAGGTAACCTAGTAACCTTGTAACCTCGTAACCTGGTAACCCAGTAACCCTGTAACCCCGTAACCCGGTAACCGAGTAACCGTGTAACCGCGTAACCGGGTAACGAAGTAACGATGTAACGACGTAACGAGGTAACGTAGTAACGTTGTATCTATGTAACGTCGTAACGTGGTAACGCAGTAACGCTGTAACGCCGTAACGCGGTAACGGAGTAACGGT"))
        XCTAssertEqual(model.convertToDNA("–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è"), .success("GTAACGGCGTAACGGGGTATCAAAGTATCAATGTATCAACGTATCAAGGTATCATAGTATCATTGTATCATCGTATCATGGTATCACAGTATCACTGTATCACCGTATCACGGTATCAGAGTATCAGTGTATCAGCGTATCAGG"))
        XCTAssertEqual(model.convertToDNA("‚îÄ‚îÇ‚îå‚îê‚îò‚îî‚îú‚î¨‚î§‚î¥‚îº‚îÅ‚îÉ‚îè‚îì‚îõ‚îó‚î£‚î≥‚î´‚îª‚ïã‚î†‚îØ‚î®‚î∑‚îø‚îù‚î∞‚î•‚î∏‚ïÇ"), .success("GCACCTTACAAAGCACCTTACAACGCACCTTACAGAGCACCTTACTAAGCACCTTACTCAGCACCTTACTTAGCACCTTACTGAGCACCTTACCGAGCACCTTACCTAGCACCTTACGTAGCACCTTACGGAGCACCTTACAATGCACCTTACAAGGCACCTTACAGGGCACCTTACTAGGCACCTTACTCGGCACCTTACTTGGCACCTTACCAGGCACCTTACGAGGCACCTTACCCGGCACCTTACGCGGCACCTTTCACGGCACCTTACCAAGCACCTTACCGGGCACCTTACCCAGCACCTTACGTGGCACCTTACGGGGCACCTTACTGTGCACCTTACGAAGCACCTTACCTTGCACCTTACGCAGCACCTTTCAAC"))
        XCTAssertEqual(model.convertToDNA("ÔΩ°ÔΩ¢ÔΩ£ÔΩ§ÔΩ•ÔΩ¶ÔΩßÔΩ®ÔΩ©ÔΩ™ÔΩ´ÔΩ¨ÔΩ≠ÔΩÆÔΩØÔΩ∞ÔΩ±ÔΩ≤ÔΩ≥ÔΩ¥ÔΩµÔΩ∂ÔΩ∑ÔΩ∏ÔΩπÔΩ∫ÔΩªÔΩºÔΩΩÔΩæÔΩøÔæÄÔæÅÔæÇÔæÉÔæÑÔæÖÔæÜÔæáÔæàÔæâÔæäÔæãÔæåÔæçÔæéÔæèÔæêÔæëÔæíÔæìÔæîÔæïÔæñÔæóÔæòÔæôÔæöÔæõÔæúÔæùÔæûÔæü"), .success("GCGGCGGTCCATGCGGCGGTCCACGCGGCGGTCCAGGCGGCGGTCCTAGCGGCGGTCCTTGCGGCGGTCCTCGCGGCGGTCCTGGCGGCGGTCCCAGCGGCGGTCCCTGCGGCGGTCCCCGCGGCGGTCCCGGCGGCGGTCCGAGCGGCGGTCCGTGCGGCGGTCCGCGCGGCGGTCCGGGCGGCGGTCGAAGCGGCGGTCGATGCGGCGGTCGACGCGGCGGTCGAGGCGGCGGTCGTAGCGGCGGTCGTTGCGGCGGTCGTCGCGGCGGTCGTGGCGGCGGTCGCAGCGGCGGTCGCTGCGGCGGTCGCCGCGGCGGTCGCGGCGGCGGTCGGAGCGGCGGTCGGTGCGGCGGTCGGCGCGGCGGTCGGGGCGGCGGCCAAAGCGGCGGCCAATGCGGCGGCCAACGCGGCGGCCAAGGCGGCGGCCATAGCGGCGGCCATTGCGGCGGCCATCGCGGCGGCCATGGCGGCGGCCACAGCGGCGGCCACTGCGGCGGCCACCGCGGCGGCCACGGCGGCGGCCAGAGCGGCGGCCAGTGCGGCGGCCAGCGCGGCGGCCAGGGCGGCGGCCTAAGCGGCGGCCTATGCGGCGGCCTACGCGGCGGCCTAGGCGGCGGCCTTAGCGGCGGCCTTTGCGGCGGCCTTCGCGGCGGCCTTGGCGGCGGCCTCAGCGGCGGCCTCTGCGGCGGCCTCCGCGGCGGCCTCGGCGGCGGCCTGAGCGGCGGCCTGTGCGGCGGCCTGCGCGGCGGCCTGG"))
        XCTAssertEqual(model.convertToDNA("‚ë†‚ë°‚ë¢‚ë£‚ë§‚ë•‚ë¶‚ëß‚ë®‚ë©‚ë™‚ë´‚ë¨‚ë≠‚ëÆ‚ëØ‚ë∞‚ë±‚ë≤‚ë≥‚Ö†‚Ö°‚Ö¢‚Ö£‚Ö§‚Ö•‚Ö¶‚Öß‚Ö®‚Ö©„çâ„åî"), .success("GCACCTATCCAAGCACCTATCCATGCACCTATCCACGCACCTATCCAGGCACCTATCCTAGCACCTATCCTTGCACCTATCCTCGCACCTATCCTGGCACCTATCCCAGCACCTATCCCTGCACCTATCCCCGCACCTATCCCGGCACCTATCCGAGCACCTATCCGTGCACCTATCCGCGCACCTATCCGGGCACCTATCGAAGCACCTATCGATGCACCTATCGACGCACCTATCGAGGCACCATTCCAAGCACCATTCCATGCACCATTCCACGCACCATTCCAGGCACCATTCCTAGCACCATTCCTTGCACCATTCCTCGCACCATTCCTGGCACCATTCCCAGCACCATTCCCTGCAGCAGTCACTGCAGCAGACTTA"))
        XCTAssertEqual(model.convertToDNA("„å¢„çç„åò„åß„åÉ„å∂„çë„çó„åç„å¶„å£„å´„çä„åª„éú„éù„éû„éé„éè„èÑ„é°„ÄÄ„çª„Äù„Äü‚Ññ„èç‚Ñ°„ä§„ä•„ä¶„äß"), .success("GCAGCAGACCACGCAGCAGTCAGTGCAGCAGACTCAGCAGCAGACCTGGCAGCAGACAAGGCAGCAGACGTCGCAGCAGTCTATGCAGCAGTCTTGGCAGCAGACAGTGCAGCAGACCTCGCAGCAGACCAGGCAGCAGACCCGGCAGCAGTCACCGCAGCAGACGCGGCAGCAGCCTGAGCAGCAGCCTGTGCAGCAGCCTGCGCAGCAGCCAGCGCAGCAGCCAGGGCAGCAGGCATAGCAGCAGCCCATGCAGCAAACAAAGCAGCAGTCGCGGCAGCAAACTGTGCAGCAAACTGGGCACCATACTTCGCAGCAGGCAGTGCACCATACCATGCAGCACCCCTAGCAGCACCCCTTGCAGCACCCCTCGCAGCACCCCTG"))
        XCTAssertEqual(model.convertToDNA("„ä®„à±„à≤„àπ„çæ„çΩ„çº‚âí‚â°‚à´‚àÆ‚àë‚àö‚ä•‚à†‚àü‚äø‚àµ‚à©‚à™"), .success("GCAGCACCCCCAGCAGCACACGATGCAGCACACGACGCAGCACACGCTGCAGCAGTCGGCGCAGCAGTCGGTGCAGCAGTCGGAGCACCACTCTACGCACCACTCCATGCACCACACCCGGCACCACACCGCGCACCACACTATGCACCACACTCCGCACCACCCCTTGCACCACACCAAGCACCACACTGGGCACCACCCGGGGCACCACACGTTGCACCACACCCTGCACCACACCCC"))
        XCTAssertEqual(model.convertToDNA("üòÄ"), .success("GGAACTGGCTCACAAA"))
    }

    func testConvertToLanguageWithText() {
        let model = DNAConverter()
        XCTAssertEqual(model.convertToLanguage(""), .failure(.empty))
        XCTAssertEqual(model.convertToLanguage(nil), .failure(.empty))
        XCTAssertEqual(model.convertToLanguage("„ÅÇ„ÅÑ„ÅÜ„Åà"), .failure(.invalid))
        XCTAssertEqual(model.convertToLanguage("ÊÑõÈ£¢Áî∑"), .failure(.invalid))
        XCTAssertEqual(model.convertToLanguage("1234"), .failure(.invalid))
        XCTAssertEqual(model.convertToLanguage("ABCD"), .failure(.invalid))
        XCTAssertEqual(model.convertToLanguage(" "), .failure(.invalid))
        XCTAssertEqual(model.convertToLanguage("„ÄÄ"), .failure(.invalid))
        XCTAssertEqual(model.convertToLanguage("AATTCCG"), .failure(.invalid))
        XCTAssertEqual(model.convertToLanguage("GCAGCAATCAACGCAGCAATCATAGCAGCAATCATCGCAGCAATCACA"), .success("„ÅÇ„ÅÑ„ÅÜ„Åà"))
        XCTAssertEqual(model.convertToLanguage("GCTCCATACTCGGCCTCCAGCCACGCTGCTTACGTG"), .success("ÊÑõÈ£¢Áî∑"))
        XCTAssertEqual(model.convertToLanguage("AGATAGACAGAGAGTA"), .success("1234"))
        XCTAssertEqual(model.convertToLanguage("TAATTAACTAAGTATA"), .success("ABCD"))
        XCTAssertEqual(model.convertToLanguage("ACAA"), .success(" "))
        XCTAssertEqual(model.convertToLanguage("GCAGCAAACAAA"), .success("„ÄÄ"))
        XCTAssertEqual(model.convertToLanguage("ACATACACACAGACTAACTTACTCACTGACCAACCTACGTTTGCTAAATTCGAGCGAGCCTTGTACGAACGCACGGTTGAAGGTTGGCTGGATCAATGCGACCGACCCTGGTAGGAAGGCAGGGTTGG"), .success("!\"#$%&'()-^@[;:],./\\=~|`{+*}<>?_"))
        XCTAssertEqual(model.convertToLanguage("GCAGCAAACAATGCAGCAAACAACGCGGCGGACAGAGCGGCGGACAGCGCAGCAAGCGCGGCGGCGGACTCCGCGGCGGACTCGGCGGCGGACTGGGCGGCGGACAATGCAGCAACCTCGGCAGCAACCTGAGAACCGTAGCGGCGGTCAAAGAACCCCAGCGGCGGACGGCGCGGCGGGCCAGGCGGCGGACGGGGCAGCAAGCGGTGCAGCAAGCGGCGCAGCAACCTGTGCAGCAACCTGCGCAGCAAACAAGGCTACGCGCTGTGCAGCAAACATTGCAGCAAACATCGCAGCAAACATGGCAGCAAGCGGAGCACCAAACTTTGCACCAAACTAAGCGGCGGACAGGGCGGCGGACGGAGCGGCGGTCTGCGCACCACACCTTGCGGCGGTCTGAGCACCAAACCTCGCACCAAACCTT"), .success("„ÄÅ„ÄÇÔºåÔºé„ÉªÔºöÔºõÔºüÔºÅ„Çõ„Çú¬¥ÔΩÄ¬®ÔºæÔø£Ôºø„ÉΩ„Éæ„Çù„Çû„ÄÉ‰ªù„ÄÖ„ÄÜ„Äá„Éº‚Äï‚ÄêÔºèÔººÔΩû‚à•ÔΩú‚Ä¶‚Ä•"))
        XCTAssertEqual(model.convertToLanguage("GCACCAAACTCAGCACCAAACTCTGCACCAAACTGAGCACCAAACTGTGCGGCGGACACAGCGGCGGACACTGCAGCAAACTTAGCAGCAAACTTTGCGGCGGACGCGGCGGCGGACGGTGCGGCGGTCTCGGCGGCGGTCTGTGCAGCAAACACAGCAGCAAACACTGCAGCAAACACCGCAGCAAACACGGCAGCAAACAGAGCAGCAAACAGTGCAGCAAACAGCGCAGCAAACAGGGCAGCAAACTAAGCAGCAAACTATGCGGCGGACACGGCGGCGGACAGTGAACCGATGAAGCTTGGAAGCGTGGCGGCGGACTGTGCACCACTCCAAGCGGCGGACTGAGCGGCGGACTGCGCACCACTCCTCGCACCACTCCTGGCACCACACTGCGCACCACACGTA"), .success("‚Äò‚Äô‚Äú‚ÄùÔºàÔºâ„Äî„ÄïÔºªÔºΩÔΩõÔΩù„Äà„Äâ„Ää„Äã„Äå„Äç„Äé„Äè„Äê„ÄëÔºãÔºç¬±√ó√∑Ôºù‚â†ÔºúÔºû‚â¶‚âß‚àû‚à¥"))
        XCTAssertEqual(model.convertToLanguage("GCACCTCTCAACGCACCTCTCAAAGAACCGAAGCACCAAACGACGCACCAAACGAGGCACCATACAAGGCGGCGGGCCTTGCGGCGGACATAGCGGCGGGCCAAGCGGCGGGCCATGCGGCGGACATTGCGGCGGACAAGGCGGCGGACATCGCGGCGGACACCGCGGCGGACCAAGAACCCTGGCACCTCACATCGCACCTCACATTGCACCTTGCACGGCACCTTGCAGGGCACCTTGCAGCGCACCTTGCATGGCACCTTGCATCGCACCTTCCCATGCACCTTCCCAAGCACCTTCCGAGGCACCTTCCGACGCACCTTCCGGTGCACCTTCCGGAGCACCAAACGCGGCAGCAAACTACGCACCATCCTACGCACCATCCTAAGCACCATCCTATGCACCATCCTAGGCAGCAAACTAG"), .success("‚ôÇ‚ôÄ¬∞‚Ä≤‚Ä≥‚ÑÉÔø•ÔºÑÔø†Ôø°ÔºÖÔºÉÔºÜÔºäÔº†¬ß‚òÜ‚òÖ‚óã‚óè‚óé‚óá‚óÜ‚ñ°‚ñ†‚ñ≥‚ñ≤‚ñΩ‚ñº‚Äª„Äí‚Üí‚Üê‚Üë‚Üì„Äì"))
        XCTAssertEqual(model.convertToLanguage("GCACCACACACAGCACCACACACGGCACCACCCATCGCACCACCCATGGCACCACCCAACGCACCACCCAAGGCACCACACCCCGCACCACACCCTGCACCACACCTGGCACCACACCCAGCGGCGGGCCACGCACCATGCTACGCACCATGCTTAGCACCACACAAAGCACCACACAAGGCACCACACCAAGCACCACCCCTTGCACCAGACTACGCACCACACAACGCACCACACATGGCACCACTCCATGCACCACTCTACGCACCACTCCCCGCACCACTCCCGGCACCACACTCCGCACCACACGGTGCACCACACTGTGCACCACACGTTGCACCACACCCGGCACCACACCGAGCACCATACCCGGCACCAAACGAAGCACCTCTCCGGGCACCTCTCCGTGCACCTCTCCCC"), .success("‚àà‚àã‚äÜ‚äá‚äÇ‚äÉ‚à™‚à©‚àß‚à®Ôø¢‚áí‚áî‚àÄ‚àÉ‚à†‚ä•‚åí‚àÇ‚àá‚â°‚âí‚â™‚â´‚àö‚àΩ‚àù‚àµ‚à´‚à¨‚Ñ´‚Ä∞‚ôØ‚ô≠‚ô™"))
        XCTAssertEqual(model.convertToLanguage("GAGCCTATGAGCCTACGAGCCTAGGAGCCTTAGAGCCTTTGAGCCTTCGAGCCTTGGAGCCTCAGAGCCTCTGAGCCTCCGAGCCTCGGAGCCTGAGAGCCTGTGAGCCTGCGAGCCTGGGAGCCCAAGAGCCCATGAGCCCAGGAGCCCTAGAGCCCTTGAGCCCTCGAGCCCTGGAGCCCCAGAGCCCCTGAGCCGATGAGCCGACGAGCCGAGGAGCCGTAGAGCCGTTGAGCCGTCGAGCCGTGGAGCCGCA"), .success("ŒëŒíŒìŒîŒïŒñŒóŒòŒôŒöŒõŒúŒùŒûŒüŒ†Œ°Œ£Œ§Œ•Œ¶ŒßŒ®Œ©Œ±Œ≤Œ≥Œ¥ŒµŒ∂Œ∑Œ∏"))
        XCTAssertEqual(model.convertToLanguage("GAGCCGCTGAGCCGCCGAGCCGCGGAGCCGGAGAGCCGGTGAGCCGGCGAGCCGGGGAGGCAAAGAGGCAATGAGGCAAGGAGGCATAGAGGCATTGAGGCATCGAGGCATGGAGGCACAGAGGCACTGTAACTAAGTAACTATGTAACTACGTAACTAGGTAACTTAGTAACTTTGTAACAATGTAACTTCGTAACTTGGTAACTCAGTAACTCTGTAACTCCGTAACTCGGTAACTGAGTAACTGTGTAACTGC"), .success("ŒπŒ∫ŒªŒºŒΩŒæŒøœÄœÅœÉœÑœÖœÜœáœàœâ–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û"))
        XCTAssertEqual(model.convertToLanguage("GTAACTGGGTAACCAAGTAACCATGTAACCACGTAACCAGGTAACCTAGTAACCTTGTAACCTCGTAACCTGGTAACCCAGTAACCCTGTAACCCCGTAACCCGGTAACCGAGTAACCGTGTAACCGCGTAACCGGGTAACGAAGTAACGATGTAACGACGTAACGAGGTAACGTAGTAACGTTGTATCTATGTAACGTCGTAACGTGGTAACGCAGTAACGCTGTAACGCCGTAACGCGGTAACGGAGTAACGGT"), .success("–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω"))
        XCTAssertEqual(model.convertToLanguage("GTAACGGCGTAACGGGGTATCAAAGTATCAATGTATCAACGTATCAAGGTATCATAGTATCATTGTATCATCGTATCATGGTATCACAGTATCACTGTATCACCGTATCACGGTATCAGAGTATCAGTGTATCAGCGTATCAGG"), .success("–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è"))
        XCTAssertEqual(model.convertToLanguage("GCACCTTACAAAGCACCTTACAACGCACCTTACAGAGCACCTTACTAAGCACCTTACTCAGCACCTTACTTAGCACCTTACTGAGCACCTTACCGAGCACCTTACCTAGCACCTTACGTAGCACCTTACGGAGCACCTTACAATGCACCTTACAAGGCACCTTACAGGGCACCTTACTAGGCACCTTACTCGGCACCTTACTTGGCACCTTACCAGGCACCTTACGAGGCACCTTACCCGGCACCTTACGCGGCACCTTTCACGGCACCTTACCAAGCACCTTACCGGGCACCTTACCCAGCACCTTACGTGGCACCTTACGGGGCACCTTACTGTGCACCTTACGAAGCACCTTACCTTGCACCTTACGCAGCACCTTTCAAC"), .success("‚îÄ‚îÇ‚îå‚îê‚îò‚îî‚îú‚î¨‚î§‚î¥‚îº‚îÅ‚îÉ‚îè‚îì‚îõ‚îó‚î£‚î≥‚î´‚îª‚ïã‚î†‚îØ‚î®‚î∑‚îø‚îù‚î∞‚î•‚î∏‚ïÇ"))
        XCTAssertEqual(model.convertToLanguage("GCGGCGGTCCATGCGGCGGTCCACGCGGCGGTCCAGGCGGCGGTCCTAGCGGCGGTCCTTGCGGCGGTCCTCGCGGCGGTCCTGGCGGCGGTCCCAGCGGCGGTCCCTGCGGCGGTCCCCGCGGCGGTCCCGGCGGCGGTCCGAGCGGCGGTCCGTGCGGCGGTCCGCGCGGCGGTCCGGGCGGCGGTCGAAGCGGCGGTCGATGCGGCGGTCGACGCGGCGGTCGAGGCGGCGGTCGTAGCGGCGGTCGTTGCGGCGGTCGTCGCGGCGGTCGTGGCGGCGGTCGCAGCGGCGGTCGCTGCGGCGGTCGCCGCGGCGGTCGCGGCGGCGGTCGGAGCGGCGGTCGGTGCGGCGGTCGGCGCGGCGGTCGGGGCGGCGGCCAAAGCGGCGGCCAATGCGGCGGCCAACGCGGCGGCCAAGGCGGCGGCCATAGCGGCGGCCATTGCGGCGGCCATCGCGGCGGCCATGGCGGCGGCCACAGCGGCGGCCACTGCGGCGGCCACCGCGGCGGCCACGGCGGCGGCCAGAGCGGCGGCCAGTGCGGCGGCCAGCGCGGCGGCCAGGGCGGCGGCCTAAGCGGCGGCCTATGCGGCGGCCTACGCGGCGGCCTAGGCGGCGGCCTTAGCGGCGGCCTTTGCGGCGGCCTTCGCGGCGGCCTTGGCGGCGGCCTCAGCGGCGGCCTCTGCGGCGGCCTCCGCGGCGGCCTCGGCGGCGGCCTGAGCGGCGGCCTGTGCGGCGGCCTGCGCGGCGGCCTGG"), .success("ÔΩ°ÔΩ¢ÔΩ£ÔΩ§ÔΩ•ÔΩ¶ÔΩßÔΩ®ÔΩ©ÔΩ™ÔΩ´ÔΩ¨ÔΩ≠ÔΩÆÔΩØÔΩ∞ÔΩ±ÔΩ≤ÔΩ≥ÔΩ¥ÔΩµÔΩ∂ÔΩ∑ÔΩ∏ÔΩπÔΩ∫ÔΩªÔΩºÔΩΩÔΩæÔΩøÔæÄÔæÅÔæÇÔæÉÔæÑÔæÖÔæÜÔæáÔæàÔæâÔæäÔæãÔæåÔæçÔæéÔæèÔæêÔæëÔæíÔæìÔæîÔæïÔæñÔæóÔæòÔæôÔæöÔæõÔæúÔæùÔæûÔæü"))
        XCTAssertEqual(model.convertToLanguage("GCACCTATCCAAGCACCTATCCATGCACCTATCCACGCACCTATCCAGGCACCTATCCTAGCACCTATCCTTGCACCTATCCTCGCACCTATCCTGGCACCTATCCCAGCACCTATCCCTGCACCTATCCCCGCACCTATCCCGGCACCTATCCGAGCACCTATCCGTGCACCTATCCGCGCACCTATCCGGGCACCTATCGAAGCACCTATCGATGCACCTATCGACGCACCTATCGAGGCACCATTCCAAGCACCATTCCATGCACCATTCCACGCACCATTCCAGGCACCATTCCTAGCACCATTCCTTGCACCATTCCTCGCACCATTCCTGGCACCATTCCCAGCACCATTCCCTGCAGCAGTCACTGCAGCAGACTTA"), .success("‚ë†‚ë°‚ë¢‚ë£‚ë§‚ë•‚ë¶‚ëß‚ë®‚ë©‚ë™‚ë´‚ë¨‚ë≠‚ëÆ‚ëØ‚ë∞‚ë±‚ë≤‚ë≥‚Ö†‚Ö°‚Ö¢‚Ö£‚Ö§‚Ö•‚Ö¶‚Öß‚Ö®‚Ö©„çâ„åî"))
        XCTAssertEqual(model.convertToLanguage("GCAGCAGACCACGCAGCAGTCAGTGCAGCAGACTCAGCAGCAGACCTGGCAGCAGACAAGGCAGCAGACGTCGCAGCAGTCTATGCAGCAGTCTTGGCAGCAGACAGTGCAGCAGACCTCGCAGCAGACCAGGCAGCAGACCCGGCAGCAGTCACCGCAGCAGACGCGGCAGCAGCCTGAGCAGCAGCCTGTGCAGCAGCCTGCGCAGCAGCCAGCGCAGCAGCCAGGGCAGCAGGCATAGCAGCAGCCCATGCAGCAAACAAAGCAGCAGTCGCGGCAGCAAACTGTGCAGCAAACTGGGCACCATACTTCGCAGCAGGCAGTGCACCATACCATGCAGCACCCCTAGCAGCACCCCTTGCAGCACCCCTCGCAGCACCCCTG"), .success("„å¢„çç„åò„åß„åÉ„å∂„çë„çó„åç„å¶„å£„å´„çä„åª„éú„éù„éû„éé„éè„èÑ„é°„ÄÄ„çª„Äù„Äü‚Ññ„èç‚Ñ°„ä§„ä•„ä¶„äß"))
        XCTAssertEqual(model.convertToLanguage("GCAGCACCCCCAGCAGCACACGATGCAGCACACGACGCAGCACACGCTGCAGCAGTCGGCGCAGCAGTCGGTGCAGCAGTCGGAGCACCACTCTACGCACCACTCCATGCACCACACCCGGCACCACACCGCGCACCACACTATGCACCACACTCCGCACCACCCCTTGCACCACACCAAGCACCACACTGGGCACCACCCGGGGCACCACACGTTGCACCACACCCTGCACCACACCCC"), .success("„ä®„à±„à≤„àπ„çæ„çΩ„çº‚âí‚â°‚à´‚àÆ‚àë‚àö‚ä•‚à†‚àü‚äø‚àµ‚à©‚à™"))
        XCTAssertEqual(model.convertToLanguage("GGAACTGGCTCACAAA"), .success("üòÄ"))
    }
}
